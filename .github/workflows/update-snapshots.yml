name: Update E2E Snapshots

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, labeled]
  merge_group:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  oisy-backend-wasm:
    runs-on: ubuntu-24.04
    if: ${{ github.event_name != 'pull_request' || contains(github.event.pull_request.labels.*.name, 'run-e2e-snapshots') }}
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout
        if: ${{ github.event_name != 'pull_request' }}
        uses: actions/checkout@v4

      - name: Checkout for pull request
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Build oisy-backend WASM
        uses: ./.github/actions/oisy-backend
        with:
          network: local

  update_snapshots:
    runs-on: ${{ matrix.os }}
    needs: oisy-backend-wasm
    strategy:
      matrix:
        os: [ubuntu-24.04, macos-14]
    env:
      MATRIX_OS: ${{ matrix.os }}
    if: ${{ github.event_name != 'pull_request' || contains(github.event.pull_request.labels.*.name, 'run-e2e-snapshots') }}
    outputs:
      ubuntu_status: ${{ steps.set_snapshot_output.outputs.ubuntu_status }}
      macos_status: ${{ steps.set_snapshot_output.outputs.macos_status }}

    steps:
      - name: Fail if branch is main
        if: ${{ github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main' }}
        run: |
          echo "This workflow should not be triggered with workflow_dispatch on main"
          exit 1

      - name: Create GitHub App Token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.PR_AUTOMATION_BOT_PUBLIC_APP_ID }}
          private-key: ${{ secrets.PR_AUTOMATION_BOT_PUBLIC_PRIVATE_KEY }}

      - name: Checkout
        if: ${{ github.event_name != 'pull_request' }}
        uses: actions/checkout@v4

      - name: Checkout for pull request
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ steps.app-token.outputs.token }}

      - name: Download WASM artifact
        uses: actions/download-artifact@v4
        with:
          name: backend.wasm.gz
          path: out/

      - name: Prepare macOS
        if: runner.os == 'macOS'
        uses: ./.github/actions/prepare-macos

      - name: Set Environment Variables
        run: echo "VITE_ETHERSCAN_API_KEY=${{ secrets.VITE_ETHERSCAN_API_KEY_E2E }}" >> $GITHUB_ENV

      - name: Deploy the backend
        uses: ./.github/actions/deploy-backend

      - name: Prepare
        uses: ./.github/actions/prepare

      - name: Run Playwright tests
        run: npm run e2e:snapshots

      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-${{ matrix.os }}
          path: playwright-report/
          retention-days: 3

      - name: Upload Playwright Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.os }}
          path: test-results/
          retention-days: 3

      - name: Check if snapshots changed
        id: check_snapshots
        run: |
          if [ -n "$(git status --porcelain e2e)" ]; then
            echo "CHANGES=true" >> $GITHUB_OUTPUT
          else
            echo "CHANGES=false" >> $GITHUB_OUTPUT
          fi

      - name: Set snapshot output
        id: set_snapshot_output
        run: |
          if [ "$RUNNER_OS" = "Linux" ]; then
            echo "ubuntu_status=${{ steps.check_snapshots.outputs.CHANGES }}" >> $GITHUB_OUTPUT
            echo "os_suffix=linux" >> $GITHUB_OUTPUT
          elif [ "$RUNNER_OS" = "macOS" ]; then
            echo "macos_status=${{ steps.check_snapshots.outputs.CHANGES }}" >> $GITHUB_OUTPUT
            echo "os_suffix=darwin" >> $GITHUB_OUTPUT
          fi

      - name: Save changed snapshots
        if: steps.check_snapshots.outputs.CHANGES == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: snapshots-${{ matrix.os }}
          path: e2e/**/*.spec.ts-snapshots/**/*-${{ steps.set_snapshot_output.outputs.os_suffix }}.png
          retention-days: 3

  finalize_snapshots_update:
    name: Finalize Snapshots Update
    runs-on: ubuntu-24.04
    needs: [update_snapshots]

    steps:
      - name: Create GitHub App Token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.PR_AUTOMATION_BOT_PUBLIC_APP_ID }}
          private-key: ${{ secrets.PR_AUTOMATION_BOT_PUBLIC_PRIVATE_KEY }}

      - name: Checkout
        if: ${{ github.event_name != 'pull_request' }}
        uses: actions/checkout@v4

      - name: Checkout for pull request
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Set snapshot status from previous jobs
        run: |
          echo "ubuntu_status=${{ needs.update_snapshots.outputs.ubuntu_status }}" >> $GITHUB_ENV
          echo "macos_status=${{ needs.update_snapshots.outputs.macos_status }}" >> $GITHUB_ENV

      - name: Download Ubuntu Snapshots
        if: env.ubuntu_status == 'true'
        uses: actions/download-artifact@v4
        with:
          name: snapshots-ubuntu-24.04
          path: e2e

      - name: Download macOS Snapshots
        if: env.macos_status == 'true'
        uses: actions/download-artifact@v4
        with:
          name: snapshots-macos-14
          path: e2e

      - name: Check for Final Changes
        run: |
          if [ -n "$(git status --porcelain e2e)" ]; then
            echo "FINAL_CHANGES=true" >> $GITHUB_ENV
          else
            echo "FINAL_CHANGES=false" >> $GITHUB_ENV
          fi

      - name: Commit and push updates
        uses: EndBug/add-and-commit@v9
        if: env.FINAL_CHANGES == 'true' && github.ref != 'refs/heads/main'
        with:
          add: e2e
          default_author: github_actions
          message: 'ðŸ¤– Update E2E snapshots'

      - name: Stage Changes on main
        if: env.FINAL_CHANGES == 'true' && github.ref == 'refs/heads/main'
        run: git add e2e

      - name: Check the Changed Files
        if: env.FINAL_CHANGES == 'true' && github.ref == 'refs/heads/main'
        run: |
          MODIFIED_FILES=$(git diff --cached --name-only)
          echo "MODIFIED_FILES<<EOF" >> $GITHUB_ENV
          echo "$MODIFIED_FILES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create Pull Request (if changes and on main)
        if: env.FINAL_CHANGES == 'true' && github.ref == 'refs/heads/main'
        uses: ./.github/actions/create-pr
        with:
          token: ${{ steps.app-token.outputs.token }}
          branch: bot-e2e-update-snapshots
          paths: e2e/
          title: 'chore(e2e): Update Playwright E2E Snapshots'
          body: |
            The following E2E snapshots have been updated:
            ```
            ${{ env.MODIFIED_FILES }}
            ```
