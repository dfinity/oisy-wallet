name: Dfx snapshot demo

on:
  workflow_dispatch:
  push:
    branches:
      - dfx-snapshot

permissions: {}

jobs:
  create-snapshot:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Install dfx
        uses: dfinity/setup-dfx@e50c04f104ee4285ec010f10609483cf41e4d365 # main

      - name: Install canisters
        run: |
          dfx start --clean --background
          dfx canister create --all # This is enough for the demo
          dfx identity get-principal
          dfx canister info backend
          dfx stop

      - name: Create snapshot
        run: ./scripts/dfx-snapshot-save

      - name: Upload snapshot
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: state.tar.xz
          path: .dfx/snapshots/dfx-snapshot

  restore-snapshot:
    needs: create-snapshot
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Install dfx
        uses: dfinity/setup-dfx@e50c04f104ee4285ec010f10609483cf41e4d365 # main

      - name: Install canisters
        run: dfx canister create --all

      - name: Download snapshot
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        with:
          name: state.tar.xz
          path: .dfx/snapshots/dfx-snapshot

      - name: Restore snapshot
        run: ./scripts/dfx-snapshot-restore

      - name: Start dfx
        run: |
          dfx start --background
          dfx identity get-principal
          dfx canister info backend
