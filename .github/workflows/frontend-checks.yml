name: Frontend Checks

on:
  pull_request:
  merge_group:
  workflow_dispatch:

permissions: {}

jobs:
  format:
    runs-on: ubuntu-24.04
    permissions:
      contents: write

    steps:
      - name: Create GitHub App Token
        uses: actions/create-github-app-token@3ff1caaa28b64c9cc276ce0a02e2ff584f3900c5 # v2.0.2
        continue-on-error: true
        id: app-token
        with:
          app-id: ${{ vars.PR_AUTOMATION_BOT_PUBLIC_APP_ID }}
          private-key: ${{ secrets.PR_AUTOMATION_BOT_PUBLIC_PRIVATE_KEY }}
      - name: Check if commits can be added
        id: check_can_add_commit
        run: |
          echo "can_add_commit=$CAN_ADD_COMMIT" >> $GITHUB_OUTPUT
        env:
          CAN_ADD_COMMIT: ${{ steps.app-token.outputs.token != '' && github.event_name == 'pull_request' }}
      - name: Checkout for pull request
        if: steps.check_can_add_commit.outputs.can_add_commit == 'true'
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ steps.app-token.outputs.token }}
          persist-credentials: false
      - name: Checkout
        if: steps.check_can_add_commit.outputs.can_add_commit == 'false'
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Prepare
        uses: ./.github/actions/prepare
      - name: Format
        run: npm run format
      - name: Check for Changes
        id: check_changes
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "changes_detected=true" >> $GITHUB_OUTPUT
          else
            echo "changes_detected=false" >> $GITHUB_OUTPUT
          fi
      - name: Commit format
        if: steps.check_changes.outputs.changes_detected == 'true'
        uses: ./.github/actions/add-and-commit
        with:
          message: 'ðŸ¤– Apply formatting changes'
          token: ${{ steps.app-token.outputs.token }}
      - name: Fail for formatting issues without personal access token
        if: steps.check_can_add_commit.outputs.can_add_commit == 'false' && steps.check_changes.outputs.changes_detected == 'true'
        run: |
          echo "Formatting changes are needed but couldn't be committed because the personal access token isn't available or this isn't a pull request."
          exit 1

  lint:
    runs-on: ubuntu-24.04
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Prepare
        uses: ./.github/actions/prepare
      - name: Lint
        run: npm run lint -- --max-warnings 0

  check:
    runs-on: ubuntu-24.04
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Prepare
        uses: ./.github/actions/prepare
      - name: Check
        run: npm run check

  test:
    runs-on: ubuntu-24.04
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Prepare
        uses: ./.github/actions/prepare
      - name: Test
        run: npm run test:coverage
      - name: Upload Coverage Report
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: always()
        with:
          name: vitest-coverage-report
          path: coverage/
          retention-days: 3

  config:
    runs-on: ubuntu-24.04
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Prepare
        uses: ./.github/actions/prepare
      - name: Install dfx
        uses: dfinity/setup-dfx@main
      - name: Check ic-domains
        run: scripts/build.ic-domains.test

  may-merge:
    if: always()
    needs: ['format', 'lint', 'check', 'test', 'config']
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: ./.github/actions/needs_success
        with:
          needs: '${{ toJson(needs) }}'
