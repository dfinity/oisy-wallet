name: Frontend Checks

on:
  pull_request:
  merge_group:
  workflow_dispatch:

permissions: {}

jobs:
  format:
    runs-on: ubuntu-24.04
    permissions:
      contents: write

    steps:
      - name: Create GitHub App Token
        uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2.1.4
        continue-on-error: true
        id: app-token
        with:
          app-id: ${{ vars.PR_AUTOMATION_BOT_PUBLIC_APP_ID }}
          private-key: ${{ secrets.PR_AUTOMATION_BOT_PUBLIC_PRIVATE_KEY }}
      - name: Check if commits can be added
        id: check_can_add_commit
        run: |
          echo "can_add_commit=$CAN_ADD_COMMIT" >> $GITHUB_OUTPUT
        env:
          CAN_ADD_COMMIT: ${{ steps.app-token.outputs.token != '' && github.event_name == 'pull_request' }}
      - name: Checkout for pull request
        if: steps.check_can_add_commit.outputs.can_add_commit == 'true'
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ steps.app-token.outputs.token }}
          persist-credentials: false
      - name: Checkout
        if: steps.check_can_add_commit.outputs.can_add_commit == 'false'
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Prepare
        uses: ./.github/actions/prepare
      - name: Restore Prettier Cache
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: ./node_modules/.cache/prettier/.prettier-cache
          key: ${{ runner.os }}-prettier-cache-format-${{ github.event.pull_request.number }}
          restore-keys: |
            ${{ runner.os }}-prettier-cache-format-
      - name: Restore ESLint Cache
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: .eslintcache
          key: ${{ runner.os }}-eslint-cache-format-${{ github.event.pull_request.number }}
          restore-keys: |
            ${{ runner.os }}-eslint-cache-format-
      - name: Format
        run: npm run format
      - name: Check for Changes
        id: check_changes
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "changes_detected=true" >> $GITHUB_OUTPUT
          else
            echo "changes_detected=false" >> $GITHUB_OUTPUT
          fi
      - name: Commit format
        if: steps.check_changes.outputs.changes_detected == 'true'
        uses: ./.github/actions/add-and-commit
        with:
          message: 'ðŸ¤– Apply formatting changes'
          token: ${{ steps.app-token.outputs.token }}
      - name: Fail for formatting issues without personal access token
        if: steps.check_can_add_commit.outputs.can_add_commit == 'false' && steps.check_changes.outputs.changes_detected == 'true'
        run: |
          echo "Formatting changes are needed but couldn't be committed because the personal access token isn't available or this isn't a pull request."
          exit 1

  lint:
    runs-on: ubuntu-24.04
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Prepare
        uses: ./.github/actions/prepare
      - name: Restore Prettier Cache
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: ./node_modules/.cache/prettier/.prettier-cache
          key: ${{ runner.os }}-prettier-cache-lint-${{ github.event.pull_request.number }}
          restore-keys: |
            ${{ runner.os }}-prettier-cache-lint-
      - name: Restore ESLint Cache
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: .eslintcache
          key: ${{ runner.os }}-eslint-cache-lint-${{ github.event.pull_request.number }}
          restore-keys: |
            ${{ runner.os }}-eslint-cache-lint-
      - name: Lint
        run: npm run lint -- --max-warnings 0

  check:
    runs-on: ubuntu-24.04
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Prepare
        uses: ./.github/actions/prepare
      - name: Check
        run: npm run check

  test:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    strategy:
      matrix:
        shardIndex: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
        shardTotal: [20]

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Prepare
        uses: ./.github/actions/prepare
      - name: Set Environment Variables
        run: echo "VITE_ALCHEMY_API_KEY=${{ secrets.VITE_ALCHEMY_API_KEY_TEST_FE }}" >> $GITHUB_ENV
      - name: Test
        # We disable the thresholds since we will check them in the next step, when all sharded reports are merged
        run: npm run test:coverage -- --reporter=blob --reporter=default --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }} --coverage.thresholds.0 --coverage.thresholds.autoUpdate=false
      - name: Upload Blob Coverage Report
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: always()
        with:
          name: vitest-coverage-report-${{ matrix.shardIndex }}
          path: .vitest-reports/*
          include-hidden-files: true
          retention-days: 1

  test-coverage:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    needs: [test]

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Prepare
        uses: ./.github/actions/prepare
      - name: Download Blob Coverage Reports
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          path: .vitest-reports
          pattern: vitest-coverage-report-*
          merge-multiple: true
      - name: Merge Coverage Reports
        run: npm run test:merge
      - name: Upload Coverage Report
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: always()
        with:
          name: vitest-coverage-report
          path: coverage/
          retention-days: 3

  config-preparation:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    outputs:
      network-matrix: ${{ steps.set-matrix.outputs.network-matrix }}

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Prepare
        uses: ./.github/actions/prepare
      - name: Set Network Matrix
        id: set-matrix
        run: |
          NETWORKS=$(scripts/build.ic-domains.test.list | jq -R . | jq -s -c .)
          echo "network-matrix=$NETWORKS" >> $GITHUB_OUTPUT

  config-build:
    runs-on: ubuntu-24.04
    needs: config-preparation
    permissions:
      contents: read
    strategy:
      matrix:
        network: ${{ fromJson(needs.config-preparation.outputs.network-matrix) }}

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Prepare
        uses: ./.github/actions/prepare
      - name: Install dfx
        uses: dfinity/setup-dfx@e50c04f104ee4285ec010f10609483cf41e4d365 # main
      - name: Check ic-domains
        continue-on-error: true
        run: |
          FILE="ic-domain.$NETWORK.txt"
          echo "" > "$FILE"
          dfx build frontend --network "$NETWORK" >/dev/null 2>/dev/null && \
            cat build/.well-known/ic-domains > "$FILE" && \
            echo " $NETWORK" >> "$FILE"
        env:
          NETWORK: ${{ matrix.network }}
      - name: Upload Domain File
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ic-domains-${{ matrix.network }}
          path: ic-domain.${{ matrix.network }}.txt
          retention-days: 1

  config:
    runs-on: ubuntu-24.04
    needs: config-build
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Prepare
        uses: ./.github/actions/prepare
      - name: Download All Domain Files
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          path: ic-domains
          pattern: ic-domains-*
          merge-multiple: true
      - name: Merge All Domain Files
        run: |
          cat ic-domains/*.txt > combined.ic-domains.txt
      - name: Run Domain Validation
        run: scripts/build.ic-domains.test combined.ic-domains.txt

  frontend-checks-pass:
    if: always()
    needs: ['format', 'lint', 'check', 'test', 'test-coverage', 'config']
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - uses: ./.github/actions/needs_success
        with:
          needs: '${{ toJson(needs) }}'
