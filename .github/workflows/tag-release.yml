name: Tag on Merge from Release Branch

on:
  pull_request:
    types: [closed]
    branches:
      - main
  merge_group:

permissions: {}

jobs:
  release:
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'chore(release)/v')
    runs-on: ubuntu-24.04
    permissions:
      contents: write

    steps:
      - name: Create GitHub App Token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        id: app-token
        with:
          app-id: ${{ vars.PR_AUTOMATION_BOT_PUBLIC_APP_ID }}
          private-key: ${{ secrets.PR_AUTOMATION_BOT_PUBLIC_PRIVATE_KEY }}

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Prepare
        uses: ./.github/actions/prepare

      - name: Get version from package.json
        id: get_version
        run: |
          version=$(node -p "require('./package.json').version")
          echo "Version from package.json: $version"
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Set git remote silently and locally
        shell: bash
        run: |
          git config url."https://github-actions:$GITHUB_TOKEN@github.com/".insteadOf "https://github.com/"
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: Create Git tag
        run: |
          git tag "v$VERSION"
          git push origin "v$VERSION"
        env:
          VERSION: ${{ steps.get_version.outputs.version }}

      - name: Unset local git remote config
        shell: bash
        run: |
          git config --unset-all url."https://github-actions:${GITHUB_TOKEN}@github.com/".insteadOf || true
          git config --unset-all url."https://github.com/".insteadOf || true
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: Publish Release Notes
        uses: ./.github/actions/release-notes
        with:
          tag: 'v${{ steps.get_version.outputs.version }}'
          app-id: ${{ vars.PR_AUTOMATION_BOT_PUBLIC_APP_ID }}
          private-key: ${{ secrets.PR_AUTOMATION_BOT_PUBLIC_PRIVATE_KEY }}

  call-deploy:
    needs: release
    if: needs.release.result == 'success'
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-to-environment.yml
    with:
      network: beta
    secrets:
      VITE_ETHERSCAN_API_KEY_STAGING: ${{ secrets.VITE_ETHERSCAN_API_KEY_STAGING }}
      VITE_INFURA_API_KEY_STAGING: ${{ secrets.VITE_INFURA_API_KEY_STAGING }}
      VITE_ALCHEMY_API_KEY_STAGING: ${{ secrets.VITE_ALCHEMY_API_KEY_STAGING }}
      VITE_QUICKNODE_API_KEY_STAGING: ${{ secrets.VITE_QUICKNODE_API_KEY_STAGING }}
      VITE_WALLET_CONNECT_PROJECT_ID_STAGING: ${{ secrets.VITE_WALLET_CONNECT_PROJECT_ID_STAGING }}
      VITE_COINGECKO_API_KEY_STAGING: ${{ secrets.VITE_COINGECKO_API_KEY_STAGING }}
      VITE_POUH_ENABLED_STAGING: ${{ secrets.VITE_POUH_ENABLED_STAGING }}
      VITE_SWAP_ACTION_ENABLED_STAGING: ${{ secrets.VITE_SWAP_ACTION_ENABLED_STAGING }}
      VITE_POW_FEATURE_ENABLED_STAGING: ${{ secrets.VITE_POW_FEATURE_ENABLED_STAGING }}
      VITE_USER_SNAPSHOT_ENABLED_STAGING: ${{ secrets.VITE_USER_SNAPSHOT_ENABLED_STAGING }}
      VITE_AIRDROPS_ENABLED_STAGING: ${{ secrets.VITE_AIRDROPS_ENABLED_STAGING }}
      VITE_PLAUSIBLE_ENABLED_STAGING: ${{ secrets.VITE_PLAUSIBLE_ENABLED_STAGING }}
      VITE_ONRAMPER_API_KEY_DEV_STAGING: ${{ secrets.VITE_ONRAMPER_API_KEY_DEV_STAGING }}
      VITE_ONRAMPER_API_KEY_PROD_STAGING: ${{ secrets.VITE_ONRAMPER_API_KEY_PROD_STAGING }}
      VITE_AUTH_ALTERNATIVE_ORIGINS_STAGING: ${{ secrets.VITE_AUTH_ALTERNATIVE_ORIGINS_STAGING }}
      VITE_ADDRESS_BOOK_ENABLED_STAGING: ${{ secrets.VITE_ADDRESS_BOOK_ENABLED_STAGING }}
      DFX_DEPLOY_KEY_STAGING: ${{ secrets.DFX_DEPLOY_KEY_STAGING }}

      VITE_ETHERSCAN_API_KEY_BETA: ${{ secrets.VITE_ETHERSCAN_API_KEY_BETA }}
      VITE_INFURA_API_KEY_BETA: ${{ secrets.VITE_INFURA_API_KEY_BETA }}
      VITE_ALCHEMY_API_KEY_BETA: ${{ secrets.VITE_ALCHEMY_API_KEY_BETA }}
      VITE_QUICKNODE_API_KEY_BETA: ${{ secrets.VITE_QUICKNODE_API_KEY_BETA }}
      VITE_WALLET_CONNECT_PROJECT_ID_BETA: ${{ secrets.VITE_WALLET_CONNECT_PROJECT_ID_BETA }}
      VITE_COINGECKO_API_KEY_BETA: ${{ secrets.VITE_COINGECKO_API_KEY_BETA }}
      VITE_POUH_ENABLED_BETA: ${{ secrets.VITE_POUH_ENABLED_BETA }}
      VITE_AUTH_ALTERNATIVE_ORIGINS_BETA: ${{ secrets.VITE_AUTH_ALTERNATIVE_ORIGINS_BETA }}
      VITE_ONRAMPER_API_KEY_DEV_BETA: ${{ secrets.VITE_ONRAMPER_API_KEY_DEV_BETA }}
      VITE_SWAP_ACTION_ENABLED_BETA: ${{ secrets.VITE_SWAP_ACTION_ENABLED_BETA }}
      VITE_POW_FEATURE_ENABLED_BETA: ${{ secrets.VITE_POW_FEATURE_ENABLED_BETA }}
      VITE_USER_SNAPSHOT_ENABLED_BETA: ${{ secrets.VITE_USER_SNAPSHOT_ENABLED_BETA }}
      VITE_AIRDROPS_ENABLED_BETA: ${{ secrets.VITE_AIRDROPS_ENABLED_BETA }}
      VITE_PLAUSIBLE_ENABLED_BETA: ${{ secrets.VITE_PLAUSIBLE_ENABLED_BETA }}
      VITE_ONRAMPER_API_KEY_PROD_BETA: ${{ secrets.VITE_ONRAMPER_API_KEY_PROD_BETA }}
      VITE_ADDRESS_BOOK_ENABLED_BETA: ${{ secrets.VITE_ADDRESS_BOOK_ENABLED_BETA }}
      DFX_DEPLOY_KEY_BETA: ${{ secrets.DFX_DEPLOY_KEY_BETA }}
