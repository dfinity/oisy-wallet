name: Binding Checks

on:
  pull_request:
  merge_group:
  workflow_dispatch:

permissions: {}

jobs:
  generate:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Create GitHub App Token
        uses: actions/create-github-app-token@3ff1caaa28b64c9cc276ce0a02e2ff584f3900c5 # v2.0.2
        id: app-token
        continue-on-error: true
        with:
          app-id: ${{ vars.PR_AUTOMATION_BOT_PUBLIC_APP_ID }}
          private-key: ${{ secrets.PR_AUTOMATION_BOT_PUBLIC_PRIVATE_KEY }}

      - name: Check if commits can be added
        id: check_can_add_commit
        run: |
          echo steps.app-token.outputs.token null $TOKEN_IS_NULL
          echo steps.app-token.outputs.token empty $TOKEN_IS_EMPTY
          echo "can_add_commit=$CAN_ADD_COMMIT" >> $GITHUB_OUTPUT
        env:
          TOKEN_IS_NULL: ${{ steps.app-token.outputs.token == null }}
          TOKEN_IS_EMPTY: ${{ steps.app-token.outputs.token == '' }}
          CAN_ADD_COMMIT: ${{ steps.app-token.outputs.token != '' && github.event_name == 'pull_request' }}

      - name: Checkout code
        if: steps.check_can_add_commit.outputs.can_add_commit == 'true'
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ steps.app-token.outputs.token }}
          persist-credentials: false

      - name: Checkout code
        if: steps.check_can_add_commit.outputs.can_add_commit == 'false'
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        id: changes
        with:
          filters: |
            src:
              - # Any new or changed canisters
                'dfx.json'
              - # Any new or changed .did files
                '**/*.did'
              - # Scripts, GitHub actions that contain 'backend' in their path.
                '**/*backend*'
              - # The backend source code
                'src/backend/**'
              - 'src/shared/**'
              - # Rust files such as Cargo.lock, Cargo.toml and rust-toolchain.toml
                '**/Cargo*'
              - '**/*rust*'
              - # Scripts that download external Candid files, with false positives.
                'scripts/build.*.sh'
              - # This workflow
                '.github/workflows/binding-checks.yml'

      - name: Build oisy-backend WASM
        if: steps.changes.outputs.src == 'true'
        uses: ./.github/actions/oisy-backend
        with:
          network: local

      - name: Prepare
        if: steps.changes.outputs.src == 'true'
        uses: ./.github/actions/prepare

      - name: Install rust
        uses: ./.github/actions/install-rust

      - name: Install dfx
        if: steps.changes.outputs.src == 'true'
        uses: dfinity/setup-dfx@e50c04f104ee4285ec010f10609483cf41e4d365 # main

      - name: Install other tools
        if: steps.changes.outputs.src == 'true'
        run: scripts/setup cargo-binstall candid-extractor didc

      - name: Generate bindings
        if: steps.changes.outputs.src == 'true'
        run: npm run generate

      - name: Check bindings
        id: check_changes
        if: steps.changes.outputs.src == 'true'
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "changes_detected=true" >> $GITHUB_OUTPUT
          else
            echo "changes_detected=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit bindings
        if: steps.changes.outputs.src == 'true' && steps.check_can_add_commit.outputs.can_add_commit == 'true' && steps.check_changes.outputs.changes_detected == 'true'
        uses: ./.github/actions/add-and-commit
        with:
          message: 'ðŸ¤– Apply bindings changes'
          token: ${{ steps.app-token.outputs.token }}

      - name: Provide diff
        if: steps.changes.outputs.src == 'true' && steps.check_can_add_commit.outputs.can_add_commit == 'false' && steps.check_changes.outputs.changes_detected == 'true'
        run: |
          echo "FIX: Please execute npm run generate"
          git diff
          exit 1

  binding-checks-pass:
    needs: ['generate']
    if: ${{ always() }}
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: ./.github/actions/needs_success
        with:
          needs: '${{ toJson(needs) }}'
