name: Backend Tests

on:
  pull_request:
    paths:
      - # Scripts, GitHub actions that contain 'backend' in their path.
        '**/*backend*'
      - # The backend source code
        'src/backend/**'
      - 'src/shared/**'
      - # Rust files such as Cargo.lock, Cargo.toml and rust-toolchain.toml
        '**/Cargo*'
      - '**/*rust*'
      - # The dockerfile used in this CI run, and the scripts it COPY's.
        'Dockerfile'
      - 'docker/**'
      - # There may be some files in frontend folder that contains 'backend' in their name.
        '!src/frontend/**'
  merge_group:
  workflow_dispatch:

permissions: {}

jobs:
  docker-build-base:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Build Base Docker Image
        uses: ./.github/actions/docker-build-base

  docker-build:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    needs: docker-build-base
    strategy:
      matrix:
        include:
          - name: backend.wasm.gz
            target: backend

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Build canister WASM
        uses: ./.github/actions/docker-build-backend
        with:
          name: ${{ matrix.name }}
          target: ${{ matrix.target }}
          network: local

  tests:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    needs: ['docker-build']
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-backend-tests-${{ hashFiles('Cargo.lock', 'rust-toolchain.toml') }}

      - name: Download backend.wasm.gz
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        with:
          name: backend.wasm.gz
          path: .

      - name: 'Run backend tests'
        working-directory: .
        run: ./scripts/test.backend.sh

  breaking-interface:
    runs-on: ubuntu-24.04
    needs: ['tests']
    permissions:
      contents: read
      pull-requests: read
    env:
      TITLE: ${{ github.event.pull_request.title }}
      DESCRIPTION: ${{ github.event.pull_request.body }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: 'Run when backend candid interface changes'
        # Goal: Run only when the backend candid interface changes, otherwise
        # every PR after a breaking change will also have to be marked as a breaking change
        # until deployment to production.  As it is, any PRs that change the backend candid
        # will still need to be announced as a breaking change, but that is probably acceptable,
        # and it makes it clear if the API is revised to no longer be breaking.
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        id: interface-changed
        with:
          filters: |
            backend-api:
              - 'src/backend/backend.did'
      - name: 'Check whether the PR description & title mention "breaking interface"'
        id: conventional-commit
        run: |
          if [[ "$TITLE" =~ ^([a-z]+)(\([-a-zA-Z0-9,]+\))\!\: ]]; then
            echo "BREAKING_TITLE=true" >> "$GITHUB_OUTPUT"
          fi
          if [[ "$DESCRIPTION" =~ "BREAKING CHANGE" ]]; then
            echo "BREAKING_DESCRIPTION=true" >> "$GITHUB_OUTPUT"
          fi
      - name: Need to check for breaking changes
        id: check-for-breaking-changes
        # Run if the interface has changed but the PR is NOT marked as a breaking change in every way possible
        if: ${{ steps.interface-changed.outputs.backend-api == true && needs.conventional-commit.outputs.BREAKING_DESCRIPTION != 'true' && needs.conventional-commit.outputs.BREAKING_TITLE != 'true' }}
        run: echo "EXPECT_NO_BREAKING_CHANGES=true" >> "$GITHUB_OUTPUT"

      - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        if: steps.check-for-breaking-changes.outputs.EXPECT_NO_BREAKING_CHANGES == 'true'
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-backend-tests-${{ hashFiles('Cargo.lock', 'rust-toolchain.toml') }}

      - name: 'Run backend tests'
        if: steps.check-for-breaking-changes.outputs.EXPECT_NO_BREAKING_CHANGES == 'true'
        working-directory: .
        run: ./scripts/test.backend.sh -- --ignored candid

  may-merge:
    needs: ['tests']
    if: ${{ always() }}
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: ./.github/actions/needs_success
        with:
          needs: '${{ toJson(needs) }}'
