// Generated from Psychedelic/DIP20 commit 1e3cfba5b5a7a6978e8887b9a5b938a944b0e426 for file 'rust/token/token.did'
// https://raw.githubusercontent.com/Psychedelic/DIP20/main/rust/token/token.did
type Metadata = record {
  fee : nat;
  decimals : nat8;
  owner : principal;
  logo : text;
  name : text;
  totalSupply : nat;
  symbol : text;
};
type Result = variant { Ok : nat; Err : TxError };
type TokenInfo = record {
  holderNumber : nat64;
  deployTime : nat64;
  metadata : Metadata;
  historySize : nat64;
  cycles : nat64;
  feeTo : principal;
};
type TxError = variant {
  InsufficientAllowance;
  InsufficientBalance;
  ErrorOperationStyle;
  Unauthorized;
  LedgerTrap;
  ErrorTo;
  Other : text;
  BlockUsed;
  AmountTooSmall;
};
service : (
  text,
  text,
  text,
  nat8,
  nat,
  principal,
  nat,
  principal,
  principal,
) -> {
  allowance : (principal, principal) -> (nat) query;
  approve : (principal, nat) -> (Result);
  balanceOf : (principal) -> (nat) query;
  burn : (nat) -> (Result);
  decimals : () -> (nat8) query;
  getAllowanceSize : () -> (nat64) query;
  getHolders : (nat64, nat64) -> (vec record { principal; nat }) query;
  getMetadata : () -> (Metadata) query;
  getTokenInfo : () -> (TokenInfo) query;
  getUserApprovals : (principal) -> (vec record { principal; nat }) query;
  historySize : () -> (nat64) query;
  logo : () -> (text) query;
  mint : (principal, nat) -> (Result);
  name : () -> (text) query;
  owner : () -> (principal) query;
  setFee : (nat) -> ();
  setFeeTo : (principal) -> ();
  setLogo : (text) -> ();
  setName : (text) -> ();
  setOwner : (principal) -> ();
  symbol : () -> (text) query;
  totalSupply : () -> (nat) query;
  transfer : (principal, nat) -> (Result);
  transferFrom : (principal, principal, nat) -> (Result);
}
