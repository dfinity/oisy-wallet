{
	"core": {
		"text": {
			"cancel": "Cancel",
			"next": "Next",
			"save": "Save",
			"back": "Back",
			"done": "Done",
			"close": "Close",
			"refresh": "Refresh",
			"name": "Name",
			"symbol": "Symbol",
			"decimals": "Decimals",
			"amount": "Amount",
			"max": "Max",
			"more": "More",
			"reject": "Reject",
			"approve": "Approve"
		},
		"info": {
			"test_banner": "For testing purposes only!"
		},
		"alt": {
			"logo": "$name logo",
			"go_to_home": "Go to the $oisy_name home page"
		},
		"warning": {
			"may_take_a_few_seconds": "This may take a few seconds.",
			"do_not_close": "Please do not close your browser tab."
		}
	},
	"navigation": {
		"text": {
			"tokens": "Assets",
			"settings": "Settings",
			"source_code_on_github": "Source code on GitHub",
			"view_on_explorer": "View on explorer",
			"source_code": "Source code",
			"changelog": "Changelog",
			"submit_ticket": "Submit a ticket"
		},
		"alt": {
			"tokens": "Go to the assets view",
			"settings": "Open your settings",
			"more_settings": "More settings",
			"menu": "Your wallet address, settings, sign-out and external links",
			"changelog": "Open the changelog of $oisy_name on GitHub to review the latest updates",
			"submit_ticket": "Report an issue or request a feature on GitHub",
			"open_twitter": "Open the DFINITY X/Twitter feed"
		}
	},
	"auth": {
		"text": {
			"title_part_1": "Multi-chain wallet.",
			"title_part_2": "100% onchain.",
			"logout": "Logout",
			"authenticate": "Open or Create",
			"safe_access": "Safe access anywhere, anytime",
			"privacy_and_security": "Anonymous, self-custodial",
			"powered_by_chain_fusion": "Built with ICP's Chain Fusion tech"
		},
		"alt": {
			"sign_in": "Sign in with Internet Identity to start using $oisy_name.",
			"preview": "Preview of $oisy_name once signed in, both on desktop and mobile"
		},
		"warning": {
			"not_signed_in": "You are not signed in. Please sign in to continue.",
			"session_expired": "You have been logged out because your session has expired."
		},
		"error": {
			"no_internet_identity": "No internet identity.",
			"invalid_pouh_credential": "Sorry, but there was an error while validating the Humanity Credential. Please contact the issuer and request the credential again.",
			"error_validating_pouh_credential_oisy": "Sorry, but there was an error while validating the Humanity Credential in $oisy_short: $error",
			"error_validating_pouh_credential": "Sorry, but there was an error while validating the Humanity Credential.",
			"error_requesting_pouh_credential": "Sorry, but there was an error while requesting the Humanity Credential.",
			"missing_pouh_issuer_origin": "Sorry, but there was an error while requesting the Humanity Credential. The issuer origin is missing.",
			"no_pouh_credential": "Sorry, but there was an error while requesting the Humanity Credential. Do you have a valid credential in Decide AI?",
			"error_while_signing_in": "Something went wrong while sign-in.",
			"unexpected_issue_with_syncing": "Unexpected issue while syncing the status of your authentication."
		}
	},
	"footer": {
		"text": {
			"developed_with": "© 2024 Developed with ❤\uFE0F at ",
			"dfinity": "DFINITY"
		},
		"alt": {
			"dfinity": "Go to DFINITY Foundation website"
		}
	},
	"wallet": {
		"text": {
			"address": "Address",
			"wallet_address": "Wallet address",
			"your_addresses": "Your addresses",
			"address_copied": "Address copied to clipboard.",
			"wallet_address_copied": "Wallet address copied to clipboard.",
			"display_wallet_address_qr": "Display wallet address as a QR code",
			"icp_deposits": "Note: For ICP deposits, use the 'Receive' button in your ICP account to get the right address.",
			"use_address_from_to": "Use this address to transfer $token to and from your wallet."
		},
		"alt": {
			"open_etherscan": "Open your address on Etherscan"
		}
	},
	"init": {
		"text": {
			"initializing_wallet": "Initializing your wallet",
			"securing_session": "Securing session with Internet Identity",
			"retrieving_public_keys": "Retrieving your public keys"
		},
		"info": {
			"hold_loading": "Hold tight, we are loading some information...",
			"hold_loading_wallet": "Hold tight, we are loading some initial data for your wallet..."
		},
		"error": {
			"no_alchemy_config": "No Alchemy config for network $network",
			"no_alchemy_provider": "No Alchemy provider for network $network",
			"no_alchemy_erc20_provider": "No Alchemy ERC20 provider for network $network",
			"no_etherscan_provider": "No Etherscan provider for network $network",
			"no_etherscan_rest_api": "No Etherscan Rest API for network $network",
			"no_infura_provider": "No Infura provider for network $network",
			"no_infura_cketh_provider": "No Infura CkETH provider for network $network",
			"no_infura_ckerc20_provider": "No Infura CkErc20 provider for network $network",
			"no_infura_erc20_provider": "No Infura ERC20 provider for network $network",
			"no_infura_erc20_icp_provider": "No Infura ERC20 Icp provider for network $network",
			"eth_address_unknown": "ETH address is unknown.",
			"loading_address": "Error while loading the $symbol address.",
			"loading_balance": "Error while loading the ETH balance.",
			"loading_balance_symbol": "Error while loading $symbol balance.",
			"erc20_contracts": "Error while loading the ERC20 contracts.",
			"minter_ckbtc_btc": "A configured minter is required to convert ckBTC to BTC.",
			"minter_cketh_eth": "A configured minter is required to convert ckETH to ETH.",
			"minter_ckerc20_erc20": "A configured minter is required to convert ckERC20 to Erc20.",
			"ledger_cketh_eth": "A configured ckETH ledger is required to convert ckErc20 to Erc20.",
			"minter_btc": "A configured minter is required to retrieve BTC.",
			"minter_ckbtc_info": "A configured minter is required to fetch the ckBTC info",
			"minter_cketh_info": "A configured minter is required to fetch the ckETH info",
			"minter_ckbtc_loading_info": "Error while loading the ckBTC minter information.",
			"minter_cketh_loading_info": "Error while loading the ckETH minter information.",
			"btc_fees_estimation": "Error while querying the estimation of the BTC fees.",
			"btc_withdrawal_statuses": "Error while fetching the BTC withdrawal statuses.",
			"transaction_price": "Error while loading the estimation of the price of a transaction.",
			"icrc_canisters": "Error while loading the ICRC canisters.",
			"erc20_user_tokens": "Error while loading the ERC20 user tokens.",
			"erc20_user_token": "Error while enabling the ERC20 twin token.",
			"icrc_custom_token": "Error while loading the ICRC custom token.",
			"loading_wallet_timeout": "Your wallet requires some initial data which has not been loaded yet. Please try again.",
			"allow_signing": "An issue occurred while setting up your wallet for signing. You've been signed out. If the issue persists, contact support."
		}
	},
	"hero": {
		"text": {
			"available_balance": "Available balance",
			"use_with_caution": "This is an alpha version. Use with caution.",
			"learn_more_about_erc20_icp": "Learn more about ERC20 ICP on Ethereum."
		}
	},
	"settings": {
		"text": {
			"title": "Settings",
			"principal": "Your Principal",
			"principal_copied": "Principal copied to clipboard",
			"principal_description": "Your ID for the $oisy_name. Created by your Internet Identity.",
			"session": "Your session expires in",
			"session_description": "All sessions last 1 hour. After 1 hour, you will need to authenticate again with Internet Identity.",
			"testnets": "Show test networks",
			"testnets_description": "Display the test networks (Sepolia) and twin tokens on testnets (ckTESTBTC and ckSepolia).",
			"hide_zero_balances_description": "Enable this feature to declutter your wallet view by hiding all tokens with a zero balance.",
			"credentials_title": "Credentials",
			"pouh_credential": "Humanity Credential",
			"pouh_credential_description": "The Humanity Credential is a proof of humanity. It is issued by Decide AI.",
			"present_pouh_credential": "Present",
			"pouh_credential_verified": "Verified ✅",
			"sign_in": "Sign in to start using $oisy_name."
		},
		"alt": {
			"testnets_toggle": "Toggle to show or hide testnets",
			"github_release": "$oisy_short release notes on GitHub"
		},
		"error": {
			"loading_profile": "Error while loading the profile. Please refresh the page to have the full experience."
		}
	},
	"networks": {
		"title": "Current network. Access to selection.",
		"test_networks": "Test networks",
		"show_testnets": "Show test networks",
		"more": "More networks coming soon...",
		"chain_fusion": "Chain Fusion (all networks)"
	},
	"receive": {
		"text": {
			"receive": "Receive",
			"address": "Receive address"
		},
		"icp": {
			"text": {
				"account_id": "ICP Account ID",
				"use_for_all_tokens": "Use for all tokens when receiving from wallets, users, or other apps that support this address format.",
				"use_for_icrc_deposit": "Use for receiving ICRC-1 tokens in the ICP network, such as SNS, ck tokens, etc.",
				"use_for_icp_deposit": "Use for ICP deposits from exchanges or other wallets that only support Account IDs.",
				"display_account_id_qr": "Display ICP Account ID as a QR code",
				"account_id_copied": "ICP Account ID copied to clipboard.",
				"principal": "ICP Principal",
				"internet_computer_principal_copied": "Internet Computer Principal copied to clipboard.",
				"display_internet_computer_principal_qr": "Display Internet Computer Principal as a QR code",
				"icp_account": "ICP Account (for exchanges)",
				"icp_account_copied": "ICP Account copied to clipboard.",
				"display_icp_account_qr": "Display ICP Account as a QR code"
			}
		},
		"ethereum": {
			"text": {
				"checking_status": "Checking $token status...",
				"from_network": "Receive from $network Network",
				"eth_to_cketh_description": "Converting $token into $ckToken requires a call to a smart contract on $network and passing your IC principal as argument – $oisy_name simplifies this procedure by enabling you to perform the conversion directly within the wallet.",
				"learn_how_to_convert": "Learn how to convert $token to $ckToken",
				"metamask": "Receive from Metamask",
				"ethereum": "Ethereum",
				"ethereum_address": "Address",
				"ethereum_address_copied": "Ethereum address copied to clipboard.",
				"display_ethereum_address_qr": "Display Ethereum address as a QR code"
			},
			"error": {
				"no_metamask": "Metamask is not available."
			}
		},
		"bitcoin": {
			"text": {
				"bitcoin": "Bitcoin",
				"checking_status": "Checking BTC status...",
				"refresh_status": "Refresh BTC status",
				"initializing": "Initializing...",
				"checking_incoming": "Checking for incoming BTC...",
				"refreshing_wallet": "Refreshing wallet...",
				"bitcoin_address": "Bitcoin",
				"bitcoin_testnet_address": "Bitcoin (Testnet)",
				"bitcoin_regtest_address": "Bitcoin (Regtest)",
				"display_bitcoin_address_qr": "Display Bitcoin Address as a QR code",
				"bitcoin_address_copied": "Bitcoin Address copied to clipboard.",
				"from_network": "Transfer Bitcoin on the BTC network to this address to receive ckBTC.",
				"fee_applied": "Please note that an estimated inter-network fee of $fee BTC will be applied."
			},
			"info": {
				"no_new_btc": "No new confirmed BTC.",
				"check_btc_progress": "Checking for incoming BTC already in progress."
			},
			"error": {
				"unexpected_btc": "Something went wrong while checking for incoming BTC."
			}
		}
	},
	"send": {
		"text": {
			"send": "Send",
			"destination": "Destination",
			"source": "Source",
			"balance": "Balance",
			"review": "Review",
			"signing_approval": "Signing approval...",
			"approving": "Approving...",
			"approving_fees": "Approving fees...",
			"approving_transfer": "Approving transfer...",
			"approving_wallet_connect": "Approving WalletConnect request...",
			"refreshing_ui": "Refreshing UI",
			"initializing": "Initializing transaction...",
			"signing_transaction": "Signing transaction...",
			"sending": "Sending...",
			"signing": "Signing...",
			"signing_message": "Signing message...",
			"network": "Network",
			"source_network": "Source network",
			"destination_network": "Destination network",
			"initializing_transaction": "Initializing transaction",
			"convert_to_native_icp": "Convert to native ICP",
			"open_qr_modal": "Start QR Code scan for transaction details",
			"scan_qr": "Scan QR Code"
		},
		"placeholder": {
			"enter_eth_address": "Enter public address (0x)",
			"enter_recipient_address": "Enter recipient address",
			"enter_wallet_address": "Enter wallet address",
			"select_network": "Select network"
		},
		"info": {
			"ckbtc_certified": "Please wait until the ckBTC parameters have been certified.",
			"cketh_certified": "Please wait until the ckETH parameters have been certified.",
			"pending_bitcoin_transaction": "You can send another Bitcoin transaction once the pending one is complete.",
			"no_available_utxos": "You won't have available utxos to perform this transaction."
		},
		"assertion": {
			"invalid_destination_address": "Invalid destination address",
			"insufficient_funds": "Insufficient funds.",
			"unknown_minimum_ckbtc_amount": "The minimum amount of ckBTC required for converting to BTC is unknown.",
			"unknown_minimum_cketh_amount": "The minimum amount of ckETH required for converting to ETH is unknown.",
			"minimum_ckbtc_amount": "The amount falls below the minimum of $amount ckBTC required for converting to BTC.",
			"minimum_cketh_amount": "The amount falls below the minimum withdrawal amount of $amount $symbol.",
			"minimum_ledger_fees": "The amount falls below the ledger fees $symbol.",
			"minimum_cketh_balance": "The $symbol balance falls below the estimated fee of $amount.",
			"unknown_cketh": "The ckETH token cannot be retrieved.",
			"destination_address_invalid": "Destination address is invalid.",
			"amount_invalid": "Amount is invalid.",
			"insufficient_funds_for_gas": "Insufficient funds for gas",
			"insufficient_funds_for_amount": "Insufficient funds for amount",
			"insufficient_ethereum_funds_to_cover_the_fees": "Insufficient Ethereum funds to cover the fees",
			"not_enough_tokens_for_gas": "Not enough $symbol for gas. Balance: $balance $symbol",
			"gas_fees_not_defined": "Gas fees are not defined.",
			"max_gas_fee_per_gas_undefined": "Max fee per gas or max priority fee per gas is undefined.",
			"address_unknown": "Address is unknown.",
			"minter_info_not_loaded": "Try again in a few seconds, a ckETH configuration parameter is not yet loaded.",
			"minter_info_not_certified": "Try again in a few seconds, a ckETH configuration parameter has not been certified.",
			"cketh_max_transaction_fee_missing": "The maximum transaction fee for ckETH is missing.",
			"utxos_fee_missing": "UTXOs fee is missing."
		},
		"error": {
			"unexpected": "Something went wrong while sending the transaction.",
			"destination_address_unknown": "ETH destination address is unknown",
			"metamask_connected": "Cannot get your accounts. Is your Metamask open and already connected?",
			"metamask_no_accounts": "No Metamask accounts found.",
			"metamask_switch_network": "Cannot request Metamask to switch to chain ID $chain_id. Is your Metamask using $network_name?",
			"erc20_data_undefined": "Erc20 transaction Data cannot be undefined or null.",
			"data_undefined": "Transaction Data cannot be undefined or null.",
			"no_identity_calculate_fee": "No identity provided to calculate the fee for its principal.",
			"invalid_destination": "The destination is invalid. Please try again with a valid wallet address or destination.",
			"incompatible_token": "The token is incompatible. Please try again with a compatible token.",
			"no_btc_network_id": "Current network ($networkId) is not a bitcoin network.",
			"no_pending_bitcoin_transaction": "There was an error loading the pending Bitcoin transactions. Please try again later.",
			"unexpected_utxos_fee": "Something went wrong while calculating transaction fee."
		}
	},
	"convert": {
		"text": {
			"converting": "Converting...",
			"convert_to_btc": "Convert to BTC",
			"convert_to_token": "Convert to $token",
			"convert_to_cketh": "Convert to ckETH",
			"convert_to_ckerc20": "Convert to $ckErc20",
			"convert_eth_to_cketh": "Convert $token to $ckToken",
			"cketh_conversions_may_take": "ckETH conversions may take up to 20 minutes.",
			"ckerc20_conversions_may_take": "$ckErc20 conversions may take up to 20 minutes.",
			"how_to_convert_eth_to_cketh": "Here is how to can convert $token to $ckToken on $oisy_name",
			"send_eth": "Send $token to your $oisy_name address",
			"wait_eth_current_balance": "Wait for $token to arrive. Current balance",
			"set_amount": "Set amount for conversion",
			"check_balance_for_fees": "Check $token balance for conversion fees",
			"fees_explanation": "You need enough $token to cover the smart contract execution fees.",
			"current_balance": "👉 Current balance:"
		},
		"error": {
			"loading_cketh_helper": "Error while loading the ckETH helper contract address. No minter canister ID has been initialized."
		}
	},
	"buy": {
		"text": {
			"buy": "Buy",
			"buy_dev": "Buy (Dev Environment)"
		},
		"onramper": {
			"title": "Buy through Onramper"
		}
	},
	"tokens": {
		"text": {
			"title": "Tokens",
			"contract_address": "Contract address",
			"balance": "Balance",
			"hide_zero_balances": "Hide zero balances",
			"hide_zeros": "Hide zeros",
			"all_tokens_with_zero_hidden": "All tokens with zero balance are currently hidden.",
			"initializing": "Initializing...",
			"updating_ui": "Updating the UI...",
			"show_token": "Show token",
			"hide_token": "Hide token"
		},
		"details": {
			"title": "Token details",
			"token": "Token",
			"network": "Network",
			"contract_address_copied": "Contract address copied to clipboard.",
			"twin_token": "Twin token",
			"standard": "Standard"
		},
		"import": {
			"text": {
				"title": "Import token",
				"review": "Review",
				"saving": "Saving...",
				"ledger_canister_id": "Ledger Canister ID",
				"index_canister_id": "Index Canister ID",
				"minter_canister_id": "Minter Canister ID",
				"ledger_canister_id_copied": "Ledger Canister ID copied to clipboard.",
				"index_canister_id_copied": "Index Canister ID copied to clipboard.",
				"minter_canister_id_copied": "Minter Canister ID copied to clipboard.",
				"verifying": "Verifying token details...",
				"add_the_token": "Add the token",
				"info": "To display custom token information correctly, $oisy_name requires setting both a Ledger and Index canister ID. More details can be found on GitHub.",
				"github_howto": "Read how ICRC token Integration works",
				"open_github_howto": "Open information about ICRC token integration on GitHub"
			},
			"error": {
				"loading_metadata": "Error while loading the metadata of the token.",
				"no_metadata": "No metadata for the token is provided. This is unexpected.",
				"unexpected_index": "Something went wrong while validating the Index canister.",
				"unexpected_index_ledger": "Something went wrong while loading the Ledger ID related to the Index canister.",
				"invalid_ledger_id": "The Ledger ID is not related to the Index canister.",
				"missing_ledger_id": "The Ledger ID is missing. Did you provide a value?",
				"missing_index_id": "The Index ID is missing. Did you provide a value?",
				"missing_contract_address": "The contract address is missing. Did you provide a value?",
				"no_network": "No network is selected. This is unexpected."
			}
		},
		"manage": {
			"text": {
				"title": "Manage tokens",
				"manage_list": "Manage list",
				"do_not_see_import": "Don’t see your token? Import",
				"clear_filter": "Clear filter",
				"manage_for_network": "Managing tokens for $network",
				"network": "Network",
				"all_tokens_zero_balance": "All tokens have zero balance."
			},
			"placeholder": {
				"select_network": "Select the network"
			},
			"info": {
				"outdated_index_canister": "$token Index canister is outdated and incompatible with $oisy_name. Contact the project team to propose an upgrade.",
				"no_changes": "No changes need to be saved."
			},
			"error": {
				"unexpected_build": "An unexpected error happened while building the list of known tokens.",
				"empty": "No tokens to enable or disable have been selected."
			}
		},
		"hide": {
			"title": "Hide token?",
			"token": "Hide $token",
			"info": "You can add this token back in the future by going into <strong>“Manage tokens”</strong> in your wallet view.",
			"confirm": "Hide",
			"hiding": "Hiding..."
		},
		"alt": {
			"context_menu": "Context menu for to the selected token",
			"open_etherscan": "Open the details of the token on Etherscan",
			"open_dashboard": "Open the details of the token on the ICP Dashboard",
			"open_contract_address_block_explorer": "Open the contract address on a block explorer"
		},
		"placeholder": {
			"enter_contract_address": "Enter an ERC20 contract address",
			"search_token": "Search for the token"
		},
		"warning": {
			"trust_token": "Make sure you trust the token you are adding. If the token you are adding is controlled by a malicious party, they could try and scam you e.g., by making you believe you received a significant amount of tokens in order to trick you into sending them tokens in return or perform other undesired actions. Learn more about scams and security risks e.g. <a rel=\"noreferrer noopener\" target=\"_blank\" href=\"https://support.metamask.io/hc/en-us/articles/4403988839451\">here</a>."
		},
		"error": {
			"invalid_contract_address": "Contract address is invalid.",
			"invalid_ledger": "The selected token is not linked with an Icrc Ledger canister.",
			"invalid_index": "The selected token is not linked with an Icrc Index canister.",
			"no_metadata": "No metadata were fetched for the contract address.",
			"unexpected": "Something went wrong while saving the token.",
			"unexpected_hiding": "Something went wrong while hiding the token.",
			"already_available": "Token is already available.",
			"loading_metadata": "Error while loading the ERC20 contract metadata.",
			"not_toggleable": "Token is not toggleable, it can not be hidden.",
			"incomplete_metadata": "No name or symbol is provided in the metadata.",
			"duplicate_metadata": "A token with a similar name or symbol already exists.",
			"unexpected_undefined": "Token is undefined. This is unexpected."
		}
	},
	"fee": {
		"text": {
			"fee": "Fee",
			"estimated_btc": "Estimated BTC Network Fee",
			"estimated_inter_network": "Estimated Inter-network Fee",
			"estimated_eth": "Estimated Ethereum Fee",
			"max_fee_eth": "Max fee <small>(likely in &lt; 30 seconds)</small>:"
		},
		"error": {
			"cannot_fetch_gas_fee": "Cannot fetch gas fee."
		}
	},
	"info": {
		"bitcoin": {
			"title": "Receive BTC & convert to ckBTC",
			"description": "Convert Bitcoin into ckBTC and benefit from the fastest and cheapest Bitcoin transaction available. The conversion process can take up to an hour.",
			"note": "You can convert ckBTC at any time back to BTC.",
			"how_to": "How to convert to ckBTC"
		},
		"ethereum": {
			"title": "Convert to $ckToken",
			"description": "With a few steps, convert your native $network $token to its twinned ICP $ckToken directly within the $oisy_name. The conversion process can take up to 20 minutes.",
			"note": "You can convert $ckToken at any time back to $token.",
			"how_to": "How to convert to $ckToken",
			"how_to_short": "How to convert $token"
		}
	},
	"wallet_connect": {
		"text": {
			"name": "WalletConnect",
			"session_proposal": "Session Proposal",
			"connect": "Connect",
			"connecting": "Connecting...",
			"disconnect": "Disconnect",
			"scan_qr": "Scan QR code",
			"or_use_link": "or use WalletConnect link",
			"proposer": "Proposer",
			"review": "Review $chain_name ($key) required permissions",
			"method": "Method",
			"methods": "Methods",
			"events": "Events",
			"message": "Message",
			"hex_data": "HEX Data",
			"raw_copied": "Raw transaction data copied to clipboard.",
			"sign_message": "Sign Message"
		},
		"domain": {
			"title": "Domain Verification",
			"valid": "Valid ✅",
			"valid_description": "The validation of the proposer's domain passed.",
			"invalid": "Invalid ❌",
			"invalid_description": "The domain of the proposer's website does not match the sender of the request.",
			"security_risk": "Security risk ⚠️",
			"security_risk_description": "The proposer's website is flagged as unsafe.",
			"unknown": "Unknown ❓",
			"unknown_description": "The domain of the proposer cannot be verified."
		},
		"info": {
			"disconnected": "WalletConnect disconnected.",
			"session_ended": "WalletConnect session was ended.",
			"connected": "WalletConnect connected.",
			"eth_transaction_executed": "WalletConnect eth_sendTransaction request executed.",
			"sign_executed": "WalletConnect sign request executed."
		},
		"error": {
			"qr_code_read": "Cannot read QR code.",
			"missing_uri": "A URI to connect to should be provided.",
			"disconnect": "An unexpected error happened while disconnecting the wallet. Resetting the connection anyway.",
			"connect": "An unexpected error happened while trying to connect the wallet.",
			"manual_workflow": "Please finalize the manual workflow that has already been initiated by opening the WalletConnect modal.",
			"skipping_request": "Skipping the WalletConnect request as another action is currently in progress through an overlay.",
			"method_not_support": "Requested method \"$method\" is not supported.",
			"unexpected_pair": "An unexpected error happened while trying to pair the wallet.",
			"no_connection_opened": "Unexpected error: No connection opened.",
			"no_session_approval": "Unexpected error: No session proposal available.",
			"unexpected": "Unexpected error while communicating with WalletConnect.",
			"request_rejected": "WalletConnect request rejected",
			"unknown_parameter": "Unknown parameter.",
			"wallet_not_initialized": "Unexpected error. Your wallet address is not initialized.",
			"from_address_not_wallet": "From address requested for the transaction is not the address of this wallet.",
			"unknown_destination": "Unknown destination address.",
			"request_not_defined": "Unexpected error: Request is not defined therefore cannot be processed.",
			"unexpected_processing_request": "Unexpected error while processing the request with WalletConnect."
		}
	},
	"transaction": {
		"text": {
			"details": "Transaction details",
			"hash": "Transaction hash",
			"hash_copied": "Transaction hash $hash copied to clipboard.",
			"id": "Transaction ID",
			"id_copied": "Transaction ID copied to clipboard.",
			"timestamp": "Timestamp",
			"type": "Type",
			"from": "From",
			"from_copied": "From address copied to clipboard.",
			"to": "To",
			"to_copied": "To address copied to clipboard.",
			"block": "Block",
			"interacted_with": "Interacted With (To)",
			"pending": "Pending...",
			"unconfirmed": "Unconfirmed",
			"status": "Status"
		},
		"status": {
			"included": "Included",
			"safe": "Safe",
			"finalised": "Finalised"
		},
		"label": {
			"reimbursement": "Reimbursement",
			"twin_token_sent": "$twinToken sent",
			"ck_token_sent": "$ckToken sent",
			"twin_token_converted": "Converted from $twinToken",
			"ck_token_converted": "Converted from $ckToken",
			"receiving_twin_token": "Receiving $twinToken",
			"sending_twin_token": "Sending $twinToken",
			"sending_twin_token_failed": "Sending $twinToken failed",
			"converting_twin_token": "Converting $twinToken to $ckToken",
			"converting_ck_token": "Converting $ckToken to $twinToken",
			"twin_network": "$twinNetwork network"
		},
		"alt": {
			"open_block_explorer": "Open this transaction on a block explorer",
			"open_from_block_explorer": "Open the 'From' address on a block explorer",
			"open_to_block_explorer": "Open the 'To' address on a block explorer"
		},
		"error": {
			"get_block_number": "Cannot get block number.",
			"failed_get_transaction": "Failed to get the transaction from the provided (hash: $hash). Please reload the wallet dapp.",
			"failed_get_mined_transaction": "Failed to get the mined transaction (hash: $hash). Please reload the wallet dapp."
		}
	},
	"transactions": {
		"text": {
			"title": "Transactions",
			"no_transactions": "You have no transactions.",
			"sign_in": "Sign in to view your transactions.",
			"open_transactions": "Open the list of $token transactions"
		},
		"error": {
			"loading_transactions": "Error while loading the transactions.",
			"loading_transactions_symbol": "Error while loading the $symbol transactions.",
			"no_token_loading_transaction": "Token not found. Transactions cannot be loaded.",
			"uncertified_transactions_removed": "Several uncertified transactions were identified and subsequently removed from the displayed lists.",
			"loading_pending_ck_ethereum_transactions": "Something went wrong while fetching the pending $network transactions.",
			"get_transaction_for_hash": "Failed to get the transaction from the provided (hash: $hash).",
			"unexpected_transaction_for_hash": "Something went wrong while loading the pending for hash: $hash."
		}
	},
	"about": {
		"text": {
			"title": "About $oisy_name"
		},
		"what": {
			"text": {
				"label": "What I can do with my tokens",
				"title": "Utility",
				"hold_crypto": "<strong>Hold crypto across networks</strong><br>Manage and transact with native Ethereum, Bitcoin <i>(coming soon)</i>, and Internet Computer assets. Powered by <a rel=\"noreferrer noopener\" target=\"_blank\" href=\"https://internetcomputer.org/chainfusion\">Chain Fusion</a>.",
				"use_eth_dapps": "<strong>Use with Ethereum dapps</strong><br>$oisy_name is fully compatible with Ethereum Defi like <a rel=\"noreferrer noopener\" target=\"_blank\" href=\"https://uniswap.org/\">Uniswap</a> thanks to the <a rel=\"noreferrer noopener\" target=\"_blank\" href=\"https://walletconnect.com/\">WalletConnect</a> framework.",
				"use_ic_dapps": "<strong>Use with Internet Computer dapps (Coming soon)</strong><br>Use your $oisy_name wallet in any <a rel=\"noreferrer noopener\" target=\"_blank\" href=\"https://internetcomputer.org/ecosystem\">dapp on the Internet Computer</a> that supports the signer standards, including <a rel=\"noreferrer noopener\" target=\"_blank\" href=\"https://oc.app/\">OpenChat</a>, <a rel=\"noreferrer noopener\" target=\"_blank\" href=\"https://www.icpswap.com/\">ICPSwap</a>, and the <a rel=\"noreferrer noopener\" target=\"_blank\" href=\"https://nns.ic0.app/\">NNS dapp</a>."
			}
		},
		"how": {
			"text": {
				"label": "How $oisy_name works",
				"title": "Magic",
				"self_custody": "<strong>Self-custody</strong><br>The key controlling your multi-chain assets is not controlled by a single entity nor has it ever existed as such. The key was generated using advanced cryptography that distributed key-shares among dedicated ICP replica nodes and signatures are created using <a rel=\"noreferrer noopener\" target=\"_blank\" href=\"https://internetcomputer.org/docs/current/developer-docs/smart-contracts/signatures/t-ecdsa\">threshold ECDSA</a>.",
				"fully_on_chain": "<strong>Fully on-chain</strong><br>Not only the keys but the entire wallet application is <a rel=\"noreferrer noopener\" target=\"_blank\" href=\"https://internetcomputer.org/capabilities\">stored on chain</a> and served directly into users’ browsers from ICP. Therefore the entire wallet is secured by a decentralized trust model making it tamper-proof.",
				"cross_device": "<strong>Cross-device</strong><br>Using <a rel=\"noreferrer noopener\" target=\"_blank\" href=\"https://identity.ic0.app/\">Internet Identity</a> means that $oisy_name can easily be used across all devices you have linked to a particular identity.",
				"verifiable_credentials": "<strong>Compatible with verifiable credentials</strong><br>$oisy_name is designed to integrate with Internet Computer’s <a rel=\"noreferrer noopener\" target=\"_blank\" href=\"https://internetcomputer.org/docs/current/developer-docs/identity/verifiable-credentials/overview\">verifiable credentials platform</a>. Users can access additional functionality, like airdrops, if they acquire credentials of a certain type.",
				"open_source": "<strong>Open source</strong><br>$oisy_short is an <a rel=\"noreferrer noopener\" target=\"_blank\" href=\"https://github.com/dfinity/oisy-wallet\">open-source project</a> lead by a dedicated team within the <a rel=\"noreferrer noopener\" target=\"_blank\" href=\"https://dfinity.org/\">DFINITY foundation</a> supported by the organization’s 200 world-leading cryptographers and engineers."
			}
		}
	}
}
