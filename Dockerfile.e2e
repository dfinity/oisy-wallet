FROM ubuntu:22.04 as deps

ENV TZ=UTC

# Install required tools
RUN DEBIAN_FRONTEND=noninteractive apt update && apt install -y \
    curl \
    libunwind-dev \
    netcat \
    ca-certificates \
    build-essential \
    jq \
    && rm -rf /var/lib/apt/lists/*

# Install NodeJS
RUN curl -sL https://deb.nodesource.com/setup_20.x | bash -
RUN apt-get install nodejs -y

# Create and use a user instead of using root
RUN useradd -ms /bin/bash apprunner
USER apprunner

# Define working directories
WORKDIR /oisy-wallet

# Install dfx
ENV DFX_PORT=4943
ENV DFX_VERSION=0.23.0
RUN DFXVM_INIT_YES=true DFX_VERSION=$DFX_VERSION sh -ci "$(curl -fsSL https://internetcomputer.org/install.sh)"

# Set permission to .config folder so that dfx can write whatever files are needed
RUN mkdir -p /home/apprunner/.config/dfx && chmod -R 700 /home/apprunner/.config

# Add dfx to path
ENV PATH="/home/apprunner/.local/share/dfx/bin:$PATH"

# Copy resources
COPY --chown=apprunner:apprunner . .

# Update dfx.json with custom backend WASM file
RUN jq --argjson new_value '{"candid": "src/backend/backend.did", "wasm": "backend.wasm.gz", "type": "custom", "gzip": true}' \
    '.canisters.signer = $new_value | .canisters.backend = $new_value' \
    dfx.json > tmp.json && mv tmp.json dfx.json

# Deploy
RUN ./docker/deploy

ENTRYPOINT ["./docker/replica"]

EXPOSE ${DFX_PORT}
