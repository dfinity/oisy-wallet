FROM --platform=linux/amd64 ubuntu@sha256:bbf3d1baa208b7649d1d0264ef7d522e1dc0deeeaaf6085bf8e4618867f03494 AS deps
# Note: The above is ubuntu 22.04

# Install required tools
RUN DEBIAN_FRONTEND=noninteractive apt update && apt install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Install node
RUN curl --fail -sSf https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
ENV NVM_DIR=/root/.nvm
COPY .nvmrc .node-version
RUN cat .node-version
RUN . "$NVM_DIR/nvm.sh" && nvm install "$(cat .node-version)"
RUN . "$NVM_DIR/nvm.sh" && nvm use "$(cat .node-version)"
RUN . "$NVM_DIR/nvm.sh" && nvm alias default "$(cat .node-version)"
RUN ln -s "$NVM_DIR/versions/node/$(cat .node-version)" "$NVM_DIR/versions/node/default"
ENV PATH="$NVM_DIR/versions/node/default/bin/:${PATH}"
RUN node --version
RUN npm --version

FROM deps AS build_frontend

COPY . .

ARG network="staging"
ENV ENV=$network
ENV DFX_NETWORK=$network

RUN echo $ENV
RUN echo $DFX_NETWORK

RUN npm ci
RUN npm run build


FROM scratch AS scratch_frontend
COPY --from=build_frontend /build /frontend
